CREATE TABLE UNIQUECODES (
  id serial not null,
  code varchar(100),
  status varchar(1) default 'A',
  year varchar(5),
  section varchar(10),
  created_at timestamp default current_timestamp
);


CREATE TABLE Year (
    year_id SERIAL PRIMARY KEY,
    year_name VARCHAR(50) NOT NULL
);

CREATE TABLE Section (
    section_id SERIAL PRIMARY KEY,
    section_name VARCHAR(100) NOT NULL,
    year_id INT REFERENCES Year(year_id) ON DELETE CASCADE
);

CREATE TABLE Subject (
    subject_id SERIAL PRIMARY KEY,
    subject_name VARCHAR(100) NOT NULL,
    section_id INT REFERENCES Section(section_id) ON DELETE CASCADE
);

CREATE TABLE Faculty (
    faculty_id SERIAL PRIMARY KEY,
    faculty_name VARCHAR(100) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    password varchar(255) NOT NULL
);

CREATE TABLE Subject_Faculty (
    subject_id INT REFERENCES Subject(subject_id) ON DELETE CASCADE,
    faculty_id INT REFERENCES Faculty(faculty_id) ON DELETE CASCADE,
    PRIMARY KEY (subject_id, faculty_id)
);

CREATE TABLE Student (
    student_id SERIAL PRIMARY KEY,
    student_name VARCHAR(100) NOT NULL,
    roll_no varchar(20) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    password varchar(255) NOT NULL,
    year_id INT REFERENCES Year(year_id) ON DELETE CASCADE,
    section_id INT REFERENCES Section(section_id) ON DELETE CASCADE
);

CREATE TABLE Attendance (
    attendance_id SERIAL PRIMARY KEY,
    student_id INT REFERENCES Student(student_id) ON DELETE CASCADE,
    subject_id INT REFERENCES Subject(subject_id) ON DELETE CASCADE,
    section_id INT REFERENCES Section(section_id) ON DELETE CASCADE,
    date DATE NOT NULL,
    status CHAR(1) NOT NULL DEFAULT 'A' CHECK (status IN ('P', 'A'))
);

CREATE INDEX date ON Attendance(student_id, subject_id, date);

INSERT INTO Year (year_name) VALUES ('First Year'), ('Second Year'), ('Third Year'), ('Fourth Year');

INSERT INTO SECTION (section_name, year_id, total_student) values
('CSA',2,90), ('CSB',2,85), ('ITA',2,82), ('ITB',2,81), ('ETCA',2,80), ('ETCB',2,80),('EI',2,78),('MECH',2,70),('CIVIL',2,68)

INSERT INTO Subject (subject_name, section_id) VALUES 
('Discrete Structures',1),('Discrete Structures',2), ('Operating Systems',1), ('Operating Systems',2), ('Machine Learning',1), ('Machine Learning',2), ('Database Management System',1), ('Database Management System',2), ('Computer Graphics',1), ('Computer Graphics',2), ('Engineering Economics',1), ('Engineering Economics',2) 


INSERT INTO Student (student_name, year_id, section_id, roll_no,email, password) VALUES
('user1', 2, 1, '23csa1', 'user1@gmail.com', 'passwordUser' ),
('user2', 2, 1, '23csa2', 'user2@gmail.com', 'passwordUser' ),
('user3', 2, 1, '23csa3', 'user3@gmail.com', 'passwordUser' ),
('user4', 2, 1, '23csa4', 'user4@gmail.com', 'passwordUser' ),
('user5', 2, 1, '23csa5', 'user5@gmail.com', 'passwordUser' ),
('user6', 2, 1, '23csa6', 'user6@gmail.com', 'passwordUser' ),
('user7', 2, 1, '23csa7', 'user7@gmail.com', 'passwordUser' ),
('user8', 2, 1, '23csa8', 'user8@gmail.com', 'passwordUser' ),
('user9', 2, 1, '23csa9', 'user9@gmail.com', 'passwordUser' ),
('user10', 2, 1, '23csa10', 'user10@gmail.com', 'passwordUser' ),
('user11', 2, 1, '23csa12', 'user11@gmail.com', 'passwordUser' ),
('user12', 2, 1, '23csa13', 'user12@gmail.com', 'passwordUser' ),
('user13', 2, 1, '23csa14', 'user13@gmail.com', 'passwordUser' ),
('user14', 2, 1, '23csa15', 'user14@gmail.com', 'passwordUser' ),
('user15', 2, 1, '23csa16', 'user15@gmail.com', 'passwordUser' )






INSERT INTO Student (student_name, year_id, section_id, roll_no,email, password) VALUES
('test1', 2, 2, '23csb1', 'test1@gmail.com', 'passwordTest'),
('test2', 2, 2, '23csb2', 'test2@gmail.com', 'passwordTest'),
('test3', 2, 2, '23csb3', 'test3@gmail.com', 'passwordTest'),
('test4', 2, 2, '23csb4', 'test4@gmail.com', 'passwordTest'),
('test5', 2, 2, '23csb5', 'test5@gmail.com', 'passwordTest'),
('test6', 2, 2, '23csb6', 'test6@gmail.com', 'passwordTest'),
('test7', 2, 2, '23csb7', 'test7@gmail.com', 'passwordTest'),
('test8', 2, 2, '23csb8', 'test8@gmail.com', 'passwordTest'),
('test9', 2, 2, '23csb9', 'test9@gmail.com', 'passwordTest'),
('test10', 2, 2, '23csb10', 'test10@gmail.com', 'passwordTest'),
('test11', 2, 2, '23csb11', 'test11@gmail.com', 'passwordTest'),
('test12', 2, 2, '23csb12', 'test12@gmail.com', 'passwordTest'),
('test13', 2, 2, '23csb13', 'test13@gmail.com', 'passwordTest'),
('test14', 2, 2, '23csb14', 'test14@gmail.com', 'passwordTest'),
('test15', 2, 2, '23csb15', 'test15@gmail.com', 'passwordTest')



docker run -d --name redis-db -p 127.0.0.1:6379:6379 redis
after this go in redis insight and create new db with 127.0.0.1:6379	




(select * from year)


(select * from section;)

1	"CSA"	2
2	"CSB"	2
3	"ITA"	2
4	"ITB"	2
5	"ETCA"	2
6	"ETCB"	2
7	"EI"	2
8	"MECH"	2
9	"CIVIL"	2


(select * from subject sub
join section sec on sub.section_id=sec.section_id;)

(select sub.subject_name ,sec.section_name, year_id, subject_id, sub.section_id from subject sub
join section sec on sub.section_id=sec.section_id;)



//counting disting date 
  SELECT subject_id, COUNT(DISTINCT date) AS total_classes
FROM Attendance
WHERE subject_id = 1  -- Replace with the desired subject_id
GROUP BY subject_id;




//geolocation 
   const response = await axios.post('https://your-api-endpoint.com/login', {
     username: 'user',
     password: 'pass'
   }, {
     withCredentials: true // Necessary to receive cookies
   });



// no $ signs included it just a normal query for SQL
  SELECT 
    s.student_id, 
    s.student_name, 
    COUNT(a.date) AS attended_classes, 
    (COUNT(a.date) * 100.0 / 
         NULLIF(
            (SELECT COUNT(DISTINCT date) 
             FROM attendance 
             WHERE section_id = 1 AND subject_id = 2), 
            0
        )
    ) AS attendance_percentage
FROM student s
LEFT JOIN attendance a 
    ON s.student_id = a.student_id 
    AND a.status = 'P'
    AND a.subject_id = 2  -- Ensures we count attendance for the given subject only
WHERE s.section_id = 1 AND s.year_id=2
GROUP BY s.student_id, s.student_name
ORDER BY s.student_id;




select * from attendance where student_id=72 and subject_id=3;
select Count(status) from attendance where status='P' and student_id=72 and subject_id=3;




newGuy here
abcdef@ietdavv.edu.in
12345678
roll- random123
year-2
CSB 

const rateLimit = require("express-rate-limit");

const loginLimiter = rateLimit({
  windowMs: 10 * 60 * 1000, // 10 minutes
  max: 5, // Limit to 5 attempts
  message: "Too many login attempts. Try again later.",
});

app.post("/user/signin/student/api", loginLimiter, studentLoginHandler);
app.post("/user/signin/teacher/api", loginLimiter, teacherLoginHandler);


pagination---
limit = 10;
offset = (limit * pageNumber) - limit;



docker exec -it postgres-db psql -U postgres
docker run -d --name redis-db -p 127.0.0.1:6379:6379 redis

